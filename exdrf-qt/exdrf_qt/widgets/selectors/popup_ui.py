from typing import TYPE_CHECKING

from PyQt5 import QtCore, QtWidgets

if TYPE_CHECKING:
    from exdrf_qt.widgets.selectors.search_line import SearchLine


class Ui_SelPopup:
    """Autogenerated content.

    Attributes:
        popup_layout: Popup layout.
        line_edit: Line edit.
        tree_view: Tree view.
        bottom_ly: Bottom ly.
        clear_button: Clear button.
        pin_button: Pin button.
        size_grip: Size grip.

    """

    popup_layout: "QtWidgets.QVBoxLayout"
    line_edit: "SearchLine"
    tree_view: "QtWidgets.QTreeView"
    bottom_ly: "QtWidgets.QHBoxLayout"
    clear_button: "QtWidgets.QToolButton"
    pin_button: "QtWidgets.QToolButton"
    size_grip: "QtWidgets.QSizeGrip"

    def setup_ui(self, SelPopup):
        from exdrf_qt.widgets.selectors.search_line import SearchLine

        SelPopup.setObjectName("SelPopup")
        SelPopup.resize(172, 316)
        SelPopup.setFrameShape(QtWidgets.QFrame.StyledPanel)
        SelPopup.setFrameShadow(QtWidgets.QFrame.Raised)
        self.popup_layout = QtWidgets.QVBoxLayout(SelPopup)
        self.popup_layout.setContentsMargins(2, 2, 2, 0)
        self.popup_layout.setSpacing(4)
        self.popup_layout.setObjectName("popup_layout")
        self.line_edit = SearchLine(parent=SelPopup, ctx=self.ctx)
        self.line_edit.setClearButtonEnabled(True)
        self.line_edit.setObjectName("line_edit")
        self.popup_layout.addWidget(self.line_edit)
        self.tree_view = QtWidgets.QTreeView(SelPopup)
        self.tree_view.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers
        )
        self.tree_view.setRootIsDecorated(False)
        self.tree_view.setHeaderHidden(True)
        self.tree_view.setObjectName("tree_view")
        self.popup_layout.addWidget(self.tree_view)
        self.bottom_ly = QtWidgets.QHBoxLayout()
        self.bottom_ly.setObjectName("bottom_ly")
        self.clear_button = QtWidgets.QToolButton(SelPopup)
        self.clear_button.setObjectName("clear_button")
        self.bottom_ly.addWidget(self.clear_button)
        self.pin_button = QtWidgets.QToolButton(SelPopup)
        self.pin_button.setObjectName("pin_button")
        self.bottom_ly.addWidget(self.pin_button)
        spacerItem = QtWidgets.QSpacerItem(
            40,
            20,
            QtWidgets.QSizePolicy.Expanding,
            QtWidgets.QSizePolicy.Minimum,
        )
        self.bottom_ly.addItem(spacerItem)
        self.size_grip = QtWidgets.QSizeGrip(SelPopup)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.size_grip.sizePolicy().hasHeightForWidth()
        )
        self.size_grip.setSizePolicy(sizePolicy)
        self.size_grip.setMinimumSize(QtCore.QSize(16, 16))
        self.size_grip.setMaximumSize(QtCore.QSize(16, 16))
        self.size_grip.setObjectName("size_grip")
        self.bottom_ly.addWidget(self.size_grip)
        self.popup_layout.addLayout(self.bottom_ly)

        self.retranslate_ui(SelPopup)
        QtCore.QMetaObject.connectSlotsByName(SelPopup)

    def retranslate_ui(self, SelPopup):
        _translate = QtCore.QCoreApplication.translate
        SelPopup.setWindowTitle(_translate("SelPopup", "SelPopup"))
        self.clear_button.setText(_translate("SelPopup", "Clear"))
        self.pin_button.setText(_translate("SelPopup", "Pin"))

    def enum_controls(self):
        """Enumerate the controls in the form."""
        return [
            self.line_edit,
            self.tree_view,
            self.clear_button,
            self.pin_button,
            self.size_grip,
        ]
