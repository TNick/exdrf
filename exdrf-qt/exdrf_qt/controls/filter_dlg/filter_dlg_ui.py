from typing import TYPE_CHECKING

from PyQt5 import QtCore, QtGui, QtWidgets

if TYPE_CHECKING:
    from exdrf_qt.controls.filter_dlg.filter_editor import FilterEditor


class Ui_FilterDlg:
    """Autogenerated content.

    Attributes:
        verticalLayout: The layout for the widget.
        c_text: C text.
        horizontalLayout: The layout for the widget.
        bbox: Bbox.

    """

    verticalLayout: "QtWidgets.QVBoxLayout"
    l_top_and: "QtWidgets.QLabel"
    c_text: "FilterEditor"
    horizontalLayout: "QtWidgets.QHBoxLayout"
    l_btm_and: "QtWidgets.QLabel"
    l_error: "QtWidgets.QLabel"
    bbox: "QtWidgets.QDialogButtonBox"

    def setup_ui(self, FilterDlg):
        from exdrf_qt.controls.filter_dlg.filter_editor import FilterEditor

        FilterDlg.setObjectName("FilterDlg")
        FilterDlg.resize(382, 356)
        self.verticalLayout = QtWidgets.QVBoxLayout(FilterDlg)
        self.verticalLayout.setObjectName("verticalLayout")
        self.l_top_and = QtWidgets.QLabel(FilterDlg)
        self.l_top_and.setObjectName("l_top_and")
        self.verticalLayout.addWidget(self.l_top_and)
        self.c_text = FilterEditor(parent=FilterDlg, ctx=self.ctx)
        self.c_text.setObjectName("c_text")
        self.verticalLayout.addWidget(self.c_text)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.l_btm_and = QtWidgets.QLabel(FilterDlg)
        self.l_btm_and.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop
        )
        self.l_btm_and.setObjectName("l_btm_and")
        self.horizontalLayout.addWidget(self.l_btm_and)
        self.l_error = QtWidgets.QLabel(FilterDlg)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.l_error.sizePolicy().hasHeightForWidth()
        )
        self.l_error.setSizePolicy(sizePolicy)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 44, 37))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(
            QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush
        )
        brush = QtGui.QBrush(QtGui.QColor(255, 44, 37))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(
            QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush
        )
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(
            QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush
        )
        self.l_error.setPalette(palette)
        font = QtGui.QFont()
        font.setItalic(True)
        self.l_error.setFont(font)
        self.l_error.setWordWrap(True)
        self.l_error.setObjectName("l_error")
        self.horizontalLayout.addWidget(self.l_error)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.bbox = QtWidgets.QDialogButtonBox(FilterDlg)
        self.bbox.setOrientation(QtCore.Qt.Horizontal)
        self.bbox.setStandardButtons(
            QtWidgets.QDialogButtonBox.Apply | QtWidgets.QDialogButtonBox.Cancel
        )
        self.bbox.setObjectName("bbox")
        self.verticalLayout.addWidget(self.bbox)

        self.retranslate_ui(FilterDlg)
        self.bbox.accepted.connect(FilterDlg.accept)  # type: ignore
        self.bbox.rejected.connect(FilterDlg.reject)  # type: ignore
        QtCore.QMetaObject.connectSlotsByName(FilterDlg)

    def retranslate_ui(self, FilterDlg):
        _translate = QtCore.QCoreApplication.translate
        FilterDlg.setWindowTitle(_translate("FilterDlg", "Compose Filter"))
        self.l_top_and.setText(_translate("FilterDlg", "AND ("))
        self.l_btm_and.setText(_translate("FilterDlg", ")"))
        self.l_error.setText(_translate("FilterDlg", "j"))

    def enum_controls(self):
        """Enumerate the controls in the form."""
        return [
            self.c_text,
            self.bbox,
        ]
