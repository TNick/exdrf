# This file was automatically generated using the exdrf_gen package.
# Source: {{ source_module }} -> {{ source_templ }}
# Don't change it manually.

from typing import TYPE_CHECKING, Any, Dict

from attrs import field, define
from PyQt5.QtCore import Qt

from exdrf_qt.models.fields import QtStringField

if TYPE_CHECKING:
    from {{ db_module }}.{{ r.categories[0] }}.api import {{ ResPascal }}  # noqa: F401


@define
class LabelField(QtStringField["{{ ResPascal }}"]):
    """Provides a label for the record.
    """
    name: str = field(default="label", init=False)
    title: str = field(default="Label")
    description: str = field(default="A single label for the entire record")

    primary: bool = field(default=False)
    visible: bool = field(default=True)
    nullable: bool = field(default=False)
    read_only: bool = field(default=True)
    resizable: bool = field(default=True)
    sortable: bool = field(default=False)
    filterable: bool = field(default=False)
    exportable: bool = field(default=True)
    qsearch: bool = field(default=True)
    multiline: bool = field(default=False)

    def values(self, record: "{{ ResPascal }}") -> Dict[Qt.ItemDataRole, Any]:
        return self.expand_value(
            {{ r.label_to_python() }},
            {%- if res_spl_id %}
            EditRole=record.{{ res_primaries[0] }}
            {%- else %}
            EditRole=(
                {%- for prm in res_primaries %}
                record.{{ prm }},
                {%- endfor %}
            )
            {%- endif %}
        )
{{ '\n' -}}
