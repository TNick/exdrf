"""empty message

Revision ID: 6870ef2417bc
Revises:
Create Date: 2025-05-26 10:45:06.248540

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "6870ef2417bc"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "comp_key_models",
        sa.Column("key_part1", sa.String(length=50), nullable=False),
        sa.Column("key_part2", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("some_float", sa.Float(), nullable=True),
        sa.Column("some_date", sa.Date(), nullable=True),
        sa.Column("some_time", sa.Time(), nullable=True),
        sa.Column(
            "some_enum",
            sa.Enum(
                "PENDING",
                "PROCESSING",
                "COMPLETED",
                "FAILED",
                name="statusenum",
            ),
            nullable=True,
        ),
        sa.Column("some_json", sa.JSON(), nullable=True),
        sa.Column("some_binary", sa.LargeBinary(), nullable=True),
        sa.PrimaryKeyConstraint("key_part1", "key_part2", name="composite_pk"),
        info={"label": '(concat "Description:" description)'},
    )
    op.create_table(
        "parents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        info={"label": '(concat "ID:" id " Name:" name)'},
    )
    op.create_index(op.f("ix_parents_name"), "parents", ["name"], unique=False)
    op.create_table(
        "tags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        info={"label": '(concat "ID:" id " Name:" name)'},
    )
    op.create_index(op.f("ix_tags_name"), "tags", ["name"], unique=True)
    op.create_table(
        "children",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("data", sa.String(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["parents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        info={
            "label": '\n            (concat "ID:" id " Parent " parent.name " Data:" data)\n            '
        },
    )
    op.create_table(
        "parent_tag_association",
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["parents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tags.id"],
        ),
        sa.PrimaryKeyConstraint("parent_id", "tag_id"),
        info={"label": '(concat "Parent:" parent_id " Tag:" tag_id)'},
    )
    op.create_table(
        "profiles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["parents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("parent_id"),
        info={"label": '(concat "ID:" id " Bio:" bio)'},
    )
    op.create_table(
        "related_items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("item_data", sa.String(length=200), nullable=True),
        sa.Column("some_int", sa.Integer(), nullable=True),
        sa.Column("comp_key_part1", sa.String(length=50), nullable=False),
        sa.Column("comp_key_part2", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["comp_key_part1", "comp_key_part2"],
            ["comp_key_models.key_part1", "comp_key_models.key_part2"],
            name="related_item_composite_fk",
        ),
        sa.PrimaryKeyConstraint("id"),
        info={"label": '(concat "ID:" id)'},
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("related_items")
    op.drop_table("profiles")
    op.drop_table("parent_tag_association")
    op.drop_table("children")
    op.drop_index(op.f("ix_tags_name"), table_name="tags")
    op.drop_table("tags")
    op.drop_index(op.f("ix_parents_name"), table_name="parents")
    op.drop_table("parents")
    op.drop_table("comp_key_models")
    # ### end Alembic commands ###
